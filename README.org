#+AUTHOR: esac
#+PROPERTY: header-args :tangle no

* Introduction

  The rfc-docs is an Emacs major mode to browse, search and read
  [[https://en.wikipedia.org/wiki/Request_for_Comments][RFC]] documents.

* Motivation

  Simplify =rfc-mode= source code to use =vanilla Emacs=
  functionalities (=completions=, =minibuffer=) and
  remove =helm= dependency.

* Screenshot

  #+CAPTION: rfc-docs
  #+NAME:   fig:rfc-docs completions box

  [[./assets/completions.png]]

  See ~./assets/fullscreen.png~ for more information.

* Dependencies

  - seq

* Tested on

  - Emacs >= 26.3

* Installation
** Cask

   Add to your Cask file:

   #+BEGIN_SRC emacs-lisp

   (depends-on "rfc-docs"
               :git "https://github.com/esac-io/rfc-docs")

   #+END_SRC

   Run =cask install= command.

** Manually

   Clone =rfc-docs= repository to a arbitrary location, e.g:

   #+BEGIN_SRC sh

   $ git clone https://github.com/esac-io/rfc-docs ~/.emacs.d/site-elisp/rfc-docs

   #+END_SRC

   Add =rfc-docs= directory to =load-path= on your emacs
   initialization file (generally: ~/.emacs.d/init.el~) and
   load it.

   #+BEGIN_SRC emacs-lisp

   ;; add to load-path
   (add-to-list 'load-path "/replace/me/to/rfc-docs/path")

   ;; load rfc-docs feature
   (require 'rfc-docs nil t)

   #+END_SRC

*** Note

    For a more dynamic approach uses:

    - =M-x load-file RET=
    - =M-x load-library RET rfc-docs RET=

* Download RFCs
** Single

   =M-x rfc-docs-search=, after enter the RFC number the text file
   will be fetched and saved at =`rfc-docs-directory' location.

** All

   Download RFC archive and decompress it at =`rfc-docs-directory'=.


   #+BEGIN_SRC sh

   $ cd ~/.emacs.d/rfc
   $ fetch https://www.rfc-editor.org/in-notes/tar/RFC-all.tar.gz
   $ tar -zxvf RFC-all.tar.gz

   #+END_SRC

*** Note

    =`rfc-docs-directory'= default values is =~/.emacs.d/rfc/=, you
    can customize this variable value.

* Customize

   =M-x customize-group RET rfc-docs=

* Usage

  Search for a RFC with the =M-x rfc-docs-search= function,
  after a RFC was selected a new buffer with its contents will
  be created with its contents.

  Inside =*rfc-<number>*= buffer use =<next>=/=<prior>= to
  forward/backward a page, optionally =SPC= can be used
  to forward a page.

** Note

  - Default movement keybinds works as usual.

** OBS

   The buffer is read-only to avoid messing with
   the original RFC content.

* Future

  - Integrate with =request= or =async-copy-file=,
    write functions to download RFC compressed archive
    from a remote/arbitrary source and decompresses it.

* References

  1. [[https://en.wikipedia.org/wiki/Request_for_Comments][RFC]]
  2. [[https://github.com/galdor/rfc-mode][rfc-mode]]

* LICENSE
  MIT
* EOF

  Everyone, deep in their hearts, is waiting
  for the end of the world to come.
  | Haruki Murakami |
